<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>hyper-collate</artifactId>
        <groupId>nl.knaw.huygens</groupId>
        <version>1.3.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>hyper-collate-core</artifactId>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hyper-collate-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.interedition</groupId>
            <artifactId>collatex-core</artifactId>
            <version>${collatex.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <dependency>
            <groupId>guru.nidi</groupId>
            <artifactId>graphviz-java</artifactId>
            <version>${graphviz-java.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.apache.xmlgraphics</groupId>-->
        <!--<artifactId>batik-i18n</artifactId>-->
        <!--<version>${batik.version}</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.apache.xmlgraphics</groupId>-->
        <!--<artifactId>batik-constants</artifactId>-->
        <!--<version>${batik.version}</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>de.vandermeer</groupId>
            <artifactId>asciitable</artifactId>
            <version>0.3.2</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hyper-collate-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-assertions-generator-maven-plugin</artifactId>
                <version>${assertj-assertions-generator.version}</version>
                <!-- Generate assertions at every build -->
                <executions>
                    <execution>
                        <goals>
                            <!--<goal>generate-assertions</goal>-->
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- List the package of classes you want to generate assertions
                      for -->
                    <packages>
                        <param>nl.knaw.huygens.hypercollate.collater</param>
                        <param>nl.knaw.huygens.hypercollate.importer</param>
                        <param>nl.knaw.huygens.hypercollate.model</param>
                        <param>nl.knaw.huygens.hypercollate.tools</param>
                        <param>nl.knaw.huygens.hypergraph.core</param>
                    </packages>
                    <!-- List the classes you want to generate assertions for -->
                    <!-- <classes> <param>nl.knaw.huygens.hypercollate</param> </classes> -->
                    <!-- Whether generated assertions classes can be inherited with
                      consistent assertion chaining -->
                    <hierarchical>true</hierarchical>

                    <!-- If true, generate assertions for all fields whatever their
                      visibility is (including private). Default to false which means assertions
                      are only generated for public fields. -->
                    <generateAssertionsForAllFields>false</generateAssertionsForAllFields>

                    <!-- Where to generate assertions entry point classes -->
                    <entryPointClassPackage>nl.knaw.huygens.hypercollate</entryPointClassPackage>

                    <!-- Restrict classes to generate assertions for with regex -->
                    <!-- <includes> <param>org\.assertj\.examples\.rpg.*</param> </includes> -->
                    <!-- Exclude classes matching the regex from generation -->
                    <!-- <excludes> <param>.*google.*HostSpecifier</param> <param>.*google.*Headers</param>
                      <param>.*google.*MediaType</param> <param>.*google.*Escaper.*</param> <param>.*Examples.*</param>
                      </excludes> -->

                    <!-- Sets the base directory where to generate assertions -->
                    <targetDir>${project.basedir}/src/test/generated-assertions</targetDir>

                    <!-- If true, all files in targetDir are removed before generating
                      new ones (default to false) -->
                    <cleanTargetDir>true</cleanTargetDir>

                    <!-- Set the package where assertion classes are generated, combine
                      it with targetDir to get the path to assertions classes. Ex: com.nba.Player
                      -> src/test/generated-assertions/my/assertions/PlayerAssert If not set, each
                      assertion class is generated in the package of the class to assert. Ex: com.nba.Player
                      -> src/test/generated-assertions/com/nba/PlayerAssert -->
                    <!-- <generateAssertionsInPackage>nl.knaw.huygens.hypercollate.assertions</generateAssertionsInPackage> -->

                    <!-- Select which assertions entry point classes to generate -->
                    <generateAssertions>true</generateAssertions>
                    <generateBddAssertions>true</generateBddAssertions>
                    <generateSoftAssertions>true</generateSoftAssertions>
                    <generateJUnitSoftAssertions>true</generateJUnitSoftAssertions>

                    <!-- Set the scope of generated sources when added to the maven
                      build. Value must be 'test' or 'compile' to and defaults to 'test'. -->
                    <!-- <generatedSourcesScope>compile</generatedSourcesScope> -->

                    <!-- If true, the plugin does not produce any logs (default to
                      false) -->
                    <!-- <quiet>true</quiet> -->

                    <!-- The generated assertions report is written to the given file.
                      The base directory containing the report file is where the plugin is executed. -->
                    <writeReportInFile>assertions-generation-report.txt</writeReportInFile>

                    <!-- If true, do not generate assertions, it's a way to disable
                      the plugin -->
                    <!-- <skip>true</skip> -->
                </configuration>
            </plugin>
            <!--<plugin>-->
            <!--<groupId>org.codehaus.mojo</groupId>-->
            <!--<artifactId>build-helper-maven-plugin</artifactId>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<phase>generate-sources</phase>-->
            <!--<goals>-->
            <!--<goal>add-test-source</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<sources>-->
            <!--<source>src/test/generated-assertions</source>-->
            <!--</sources>-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
        </plugins>
    </build>
</project>